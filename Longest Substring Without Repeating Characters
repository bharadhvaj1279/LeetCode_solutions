3. Longest Substring Without Repeating Characters
Solved
Medium
Topics
premium lock icon
Companies
Hint
Given a string s, find the length of the longest substring without duplicate characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.

------------------------------------------------------------------------------------
solution in java:


class Solution {
    public int lengthOfLongestSubstring(String s) {
        int sum=0;
        String ss="";
        int temp=0;
        for(int i=0; i<s.length();i++){
            char c=s.charAt(i); 
            if(ss.indexOf(c) >= 0){   
                ss = ss.substring(ss.indexOf(c)+1);
            }
            ss += c;                 
            temp = ss.length();      
            if(temp > sum){          
                sum = temp;
            }
        }
        return sum;
    }
}
------------------------------------------------------------------------------------------
solution in python :

class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        n = 0
        ss = ""
        l = []
        for i in s:
            if i in ss:
                l.append(len(ss))
              
                ss = ss[ss.index(i) + 1:] + i
            else:
                ss += i
        l.append(len(ss))
        return max(l) if l else 0

